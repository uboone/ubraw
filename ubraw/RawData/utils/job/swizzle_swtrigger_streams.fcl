#include "geometry_microboone.fcl"
#include "detectorclocks_microboone.fcl"
#include "pmtconfig_microboone.fcl"
#include "sam_microboone.fcl"
#include "opticaldetectormodules_microboone.fcl"
#include "flashfilter_microboone.fcl"
#include "subevent_module.fcl"
#include "seedservice_microboone.fcl"
#include "triggerenforcement.fcl"
#include "swtrigger_microboone.fcl"
#include "time_memory_tracker_microboone.fcl" 
#include "reco_uboone_data_notpc.fcl"
#include "nearline_swtrigger_monitor.fcl"

process_name: Swizzler
services:
{
  TFileService: { fileName: "daq_hist.root" }
  TimeTracker:            @local::microboone_time_tracker
  MemoryTracker:          @local::microboone_memory_tracker
  RandomNumberGenerator: {} 
  NuRandomService:        @local::microboone_seedservice
  FileCatalogMetadata:    @local::art_file_catalog_data
  @table::microboone_reco_notpc_services
}
services.DetectorClocksService.InheritClockConfig: false
services.DetectorClocksService.TrigModuleName: "daq"

microboone_tfile_metadata:
{
  JSONFileName:          "daq_hist.root.json"
  GenerateTFileMetadata: true
  dataTier:              "root-tuple"
  fileFormat:            "root"
}

source:
{
  fileNames:       []
  module_type:	   LArRawInputSourceUBooNE
  maxEvents:       -1
  huffmanDecode:   true
  swizzleTPC:      true
  swizzlePMT:      true
  swizzleTriggerType: ALL
  UseSQLite:       true
  beam_histograms: [ "E:TOR101, 100, 0, 50",
                     "E:TORTGT, 100, 0, 50",
                     "E:TOR860, 100, 0, 5",
                     "E:TOR875, 100, 0, 5" ]
  enforceFrameMatching: true ## quit if TPC, PMT, and TRIG stream frames don't match - should be true by default
}

outputs:
{
 outbnb:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_bnb_%#.root"
   dataTier: "raw"
   streamName: "outbnb"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_bnb ]
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
 outbnboptfilter:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_bnb_optfilter_%#.root"
   dataTier: "raw"
   streamName: "outbnboptfilter"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_bnb_optfilter ]
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
 outbnbunbiased:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_bnb_unbiased_%#.root"
   dataTier: "raw"
   streamName: "outbnbunbiased"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_bnb_unbiased ]
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
 outbnbhsnc0:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_bnb_hsnc0_%#.root"
   dataTier: "raw"
   streamName: "outbnbhsnc0"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_bnb_hsnc0 ]
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
 outnumi:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_numi_%#.root"
   dataTier: "raw"
   streamName: "outnumi"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_numi ]
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
 outnumiunbiased:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_numi_unbiased_%#.root"
   dataTier: "raw"
   streamName: "outnumiunbiased"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_numi_unbiased ]
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
 outextbnb:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_ext_bnb_%#.root"
   dataTier: "raw"
   streamName: "outextbnb"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_ext_bnb ]
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
 outextbnboptfilter:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_ext_bnb_optfilter_%#.root"
   dataTier: "raw"
   streamName: "outextbnboptfilter"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_ext_bnb_optfilter ]
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
 outextnumi:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_ext_numi_%#.root"
   dataTier: "raw"
   streamName: "outextnumi"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_ext_numi ]
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
 outextunbiased:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_ext_unbiased_%#.root"
   dataTier: "raw"
   streamName: "outextunbiased"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_ext_unbiased ]
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
 outexthsnc0:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_ext_hsnc0_%#.root"
   dataTier: "raw"
   streamName: "outexthsnc0"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_ext_hsnc0 ]
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
 outmucs:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_mucs_%#.root"
   dataTier: "raw"
   streamName: "outmucs"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_mucs ]
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
 outnotpc:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_notpc_%#.root"
   dataTier: "raw"
   streamName: "outnotpc"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   outputCommands: ["keep *_*_*_*",
                    "drop raw::RawDigits_*_*_*"]
   SelectEvents: [ path_notpc ]
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
}

physics:
{
 producers: {
  @table::microboone_reco_notpc_producers
 }
 filters: {

  # Software trigger emulation.

  swtrigger: @local::microboone_swtrigger_data

  # Hardware and software trigger filters (TriggerEnforcement module)

  @table::microboone_reco_notpc_filters
 }

 path_notpc:         [ @sequence::microboone_reco_notpc ]
 path_bnb:           [ swtrigger, swtrigbnb ]
 path_bnb_optfilter: [ swtrigger, @sequence::microboone_reco_notpc, swtrigbnb, opfiltercommonbnb ]
 path_bnb_unbiased:  [ swtrigger, swtrigbnbunbiased ]
 path_bnb_hsnc0:     [ swtrigger, swtrigbnbhsnc0 ]
 path_numi:          [ swtrigger, swtrignumi ]
 path_numi_unbiased: [ swtrigger, swtrignumiunbiased ]
 path_ext_bnb:       [ swtrigger, swtrigextbnb ]
 path_ext_bnb_optfilter: [ swtrigger, @sequence::microboone_reco_notpc, swtrigextbnb, opfiltercommonext ]
 path_ext_numi:      [ swtrigger, swtrigextnumi ]
 path_ext_unbiased:  [ swtrigger, swtrigextunbiased ]
 path_ext_hsnc0:     [ swtrigger, swtrigexthsnc0 ]
 path_mucs:          [ swtrigger, trigmucs ]

 stream_notpc:         [ outnotpc ]
 stream_bnb:           [ outbnb ]
 stream_bnb_optfilter: [ outbnboptfilter ]
 stream_bnb_unbiased:  [ outbnbunbiased ]
 stream_bnb_hsnc0:     [ outbnbhsnc0 ]
 stream_numi:          [ outnumi ]
 stream_numi_unbiased: [ outnumiunbiased ]
 stream_ext_bnb:       [ outextbnb ]
 stream_ext_bnb_optfilter: [ outextbnboptfilter ]
 stream_ext_numi:      [ outextnumi ]
 stream_ext_unbiased:  [ outextunbiased ]
 stream_ext_hsnc0:     [ outexthsnc0 ]
 stream_mucs:          [ outmucs ]

 trigger_paths: [ path_notpc,
                  path_bnb,
                  path_bnb_optfilter,
                  path_bnb_unbiased,
                  path_bnb_hsnc0,
                  path_numi,
                  path_numi_unbiased,
                  path_ext_bnb,
                  path_ext_bnb_optfilter,
                  path_ext_numi,
                  path_ext_unbiased,
                  path_ext_hsnc0,
		  path_mucs ]

 end_paths:     [ stream_notpc,
                  stream_bnb,
                  stream_bnb_optfilter,
                  stream_bnb_hsnc0,
                  stream_bnb_unbiased,
                  stream_numi,
                  stream_numi_unbiased,
                  stream_ext_bnb,
                  stream_ext_bnb_optfilter,
                  stream_ext_numi,
                  stream_ext_unbiased,
                  stream_ext_hsnc0,
		  stream_mucs ]
}

physics.filters.swtrigger.EXT_NUMIwin_FEMBeamTriggerAlgo.PrescaleFactor: 1.0
physics.filters.swtrigger.EXT_unbiased_PrescaleAlgo.PrescaleFactor: 1.0

physics.filters.trigbnb.HardwareTriggerProducer: "daq"
physics.filters.trigbnb.SoftwareTriggerProducer: "swtrigger"
physics.filters.trigbnb.IncludeBits: [ "TriggerBNB" ]

physics.filters.trignumi.HardwareTriggerProducer: "daq"
physics.filters.trignumi.SoftwareTriggerProducer: "swtrigger"
physics.filters.trignumi.IncludeBits: [ "TriggerNuMI" ]

physics.filters.trigext.HardwareTriggerProducer: "daq"
physics.filters.trigext.SoftwareTriggerProducer: "swtrigger"
physics.filters.trigext.IncludeBits: [ "TriggerEXT" ]

physics.filters.trigmucs.HardwareTriggerProducer: "daq"
physics.filters.trigmucs.SoftwareTriggerProducer: "swtrigger"
physics.filters.trigmucs.IncludeBits: [ "Spare" ]

physics.filters.swtrigbnb.HardwareTriggerProducer: "daq"
physics.filters.swtrigbnb.SoftwareTriggerProducer: "swtrigger"
physics.filters.swtrigbnb.IncludeBits: [ "TriggerBNB" ]
physics.filters.swtrigbnb.includeSoftwareTriggers: [ "BNB_FEMBeamTriggerAlgo" ]

physics.filters.swtrigbnbunbiased.HardwareTriggerProducer: "daq"
physics.filters.swtrigbnbunbiased.SoftwareTriggerProducer: "swtrigger"
physics.filters.swtrigbnbunbiased.IncludeBits: [ "TriggerBNB" ]
physics.filters.swtrigbnbunbiased.includeSoftwareTriggers: [ "BNB_unbiased_PrescaleAlgo" ]

physics.filters.swtrigbnbhsnc0.HardwareTriggerProducer: "daq"
physics.filters.swtrigbnbhsnc0.SoftwareTriggerProducer: "swtrigger"
physics.filters.swtrigbnbhsnc0.IncludeBits: [ "TriggerBNB" ]
physics.filters.swtrigbnbhsnc0.includeSoftwareTriggers: [ "BNB_HSN_c0_FEMBeamTriggerAlgo" ]
physics.filters.swtrigbnbhsnc0.excludeSoftwareTriggers: [ "BNB_FEMBeamTriggerAlgo" ]

physics.filters.swtrignumi.HardwareTriggerProducer: "daq"
physics.filters.swtrignumi.SoftwareTriggerProducer: "swtrigger"
physics.filters.swtrignumi.IncludeBits: [ "TriggerNuMI" ]
physics.filters.swtrignumi.includeSoftwareTriggers: [ "NUMI_FEMBeamTriggerAlgo" ]

physics.filters.swtrignumiunbiased.HardwareTriggerProducer: "daq"
physics.filters.swtrignumiunbiased.SoftwareTriggerProducer: "swtrigger"
physics.filters.swtrignumiunbiased.IncludeBits: [ "TriggerNuMI" ]
physics.filters.swtrignumiunbiased.includeSoftwareTriggers: [ "NUMI_unbiased_PrescaleAlgo" ]

physics.filters.swtrigextbnb.HardwareTriggerProducer: "daq"
physics.filters.swtrigextbnb.SoftwareTriggerProducer: "swtrigger"
physics.filters.swtrigextbnb.IncludeBits: [ "TriggerEXT" ]
physics.filters.swtrigextbnb.includeSoftwareTriggers: [ "EXT_BNBwin_FEMBeamTriggerAlgo" ]

physics.filters.swtrigextnumi.HardwareTriggerProducer: "daq"
physics.filters.swtrigextnumi.SoftwareTriggerProducer: "swtrigger"
physics.filters.swtrigextnumi.IncludeBits: [ "TriggerEXT" ]
physics.filters.swtrigextnumi.includeSoftwareTriggers: [ "EXT_NUMIwin_FEMBeamTriggerAlgo" ]

physics.filters.swtrigextunbiased.HardwareTriggerProducer: "daq"
physics.filters.swtrigextunbiased.SoftwareTriggerProducer: "swtrigger"
physics.filters.swtrigextunbiased.IncludeBits: [ "TriggerEXT" ]
physics.filters.swtrigextunbiased.includeSoftwareTriggers: [ "EXT_unbiased_PrescaleAlgo" ]

### Here we try to suppress known and pointless messages
services.message.destinations :
{
  STDCOUT: 
  {
     type:      "cout"      #tells the message service to output this destination to cout
     threshold: "WARNING"   #tells the message service that this destination applies to WARNING and higher level messages
     categories:
     {
       ChannelFilter:
       {
         limit: 0
         reportEvery: 0
       }
       TrackStitcher:
       {
         limit: 0
         reportEvery: 0
       }
       CRHitRemoval:
       {
         limit: 0
         reportEvery: 0
       }
       default:
       {
         limit: -1  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 1
       }
     }
  }
}
