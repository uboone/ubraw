#include "services_microboone.fcl"

process_name: GPSOffset

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  TFileService: { fileName: "gps_offset.root" }
  WireReadout:  @local::microboone_wire_readout
  Geometry:                @local::microboone_geo
  UBOpReadoutMap:          @local::microboone_opreadoutmap
  DetectorClocksService:   @local::microboone_detectorclocks
  FileCatalogMetadata:     @local::art_file_catalog_data
  message:                 @local::standard_info
}

services.DetectorClocksService.InheritClockConfig: false

microboone_tfile_metadata:
{
  JSONFileName:          "gps_offset.root.json"
  GenerateTFileMetadata: true
  dataTier:              "root-tuple"
  fileFormat:            "root"
}

source:
{
  fileNames:       []
  module_type:	   LArRawInputSourceUBooNE
  maxEvents:       -1
  huffmanDecode:   true
  swizzleTPC:      true
  swizzlePMT:      true
  swizzleTrigger:  true

  swizzleTriggerType: ALL ## This is the only option that works currently!
#  swizzleTriggerType: BNB
#  swizzleTriggerType: EXT
#  swizzleTriggerType: NuMI
#  swizzleTriggerType: CALIB
  UseSQLite:       true
  beam_histograms: [ "E:TOR101, 100, 0, 50",
                     "E:TORTGT, 100, 0, 50",
                     "E:TOR860, 100, 0, 5",
                     "E:TOR875, 100, 0, 5" ]
  enforceFrameMatching: false ## quit if TPC, PMT, and TRIG stream frames don't match - should be true by default
}

physics:
{

 analyzers: {
  gps: {
    module_type: "GPSOffsetAna"
    DAQHeaderProducer: "daq"
    DAQHeaderTimeUBooNEProducer: "daq"
    NumDump: 100
    MakeTree: true
  }
 }

 ana:  [ gps ]

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ ana ]
}

