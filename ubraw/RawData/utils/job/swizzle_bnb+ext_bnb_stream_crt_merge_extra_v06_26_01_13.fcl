#include "geometry_microboone.fcl"
#include "detectorclocks_microboone.fcl"
#include "pmtconfig_microboone.fcl"
#include "sam_microboone.fcl"
#include "opticaldetectormodules_microboone.fcl"
#include "flashfilter_microboone.fcl"
#include "subevent_module.fcl"
#include "seedservice_microboone.fcl"
#include "triggerenforcement.fcl"
#include "time_memory_tracker_microboone.fcl" 
#include "reco_uboone_data_notpc.fcl"
#include "microboone_crt_merger.fcl"
#include "nearline_swtrigger_monitor.fcl"

process_name: Swizzler
services:
{
  TFileService: { fileName: "daq_hist.root" }
  TimeTracker:            @local::microboone_time_tracker
  MemoryTracker:          @local::microboone_memory_tracker
  RandomNumberGenerator: {} 
  FileCatalogMetadata:    @local::art_file_catalog_data
  @table::microboone_reco_notpc_services
}
services.DetectorClocksService.InheritClockConfig: false

microboone_tfile_metadata:
{
  JSONFileName:          "daq_hist.root.json"
  GenerateTFileMetadata: true
  dataTier:              "root-tuple"
  fileFormat:            "root"
}

source:
{
  fileNames:       []
  module_type:	   LArRawInputSourceUBooNE
  maxEvents:       -1
  huffmanDecode:   true
  swizzleTPC:      true
  swizzlePMT:      true
  swizzleTriggerType: ALL
  beam_histograms: [ "E:TOR101, 100, 0, 50",
                     "E:TORTGT, 100, 0, 50",
                     "E:TOR860, 100, 0, 5",
                     "E:TOR875, 100, 0, 5" ]
  enforceFrameMatching: true ## quit if TPC, PMT, and TRIG stream frames don't match - should be true by default
}

outputs:
{
 outbnb:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_bnb_%#.root"
   dataTier: "raw"
   streamName: "outbnb"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_bnb ]
   fileProperties: {
     maxSize: 1500000 # KiB = 2 GB
     granularity: "InputFile"
    }
  }
 outextbnb:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc_ext_bnb_%#.root"
   dataTier: "raw"
   streamName: "outextbnb"
   compressionLevel: 3
   saveMemoryObjectThreshold: 0
   SelectEvents: [ path_ext_bnb ]
   fileProperties: {
     maxSize: 1500000 # KiB = 2 GB
     granularity: "InputFile"
    }
  }
}

physics:
{
 producers: {
  @table::microboone_reco_notpc_producers
  merger : @local::microboone_crt_merger
  mergerextra : @local::microboone_crt_merger_extra
 }
 filters: {
  @table::microboone_reco_notpc_filters
  swtrigBNB:  @local::swtriggerBNB
  swtrigNUMI: @local::swtriggerNUMI
  swtrigEXT:  @local::swtriggerEXT
 }

 path_bnb:           [ merger, mergerextra, @sequence::microboone_reco_notpc, swtrigbnb ]
 path_ext_bnb:       [ merger, mergerextra, @sequence::microboone_reco_notpc, swtrigextbnb ]

 # paths for software trigger rate monitoring
 path_ext_unbiased_swtrig:  [ swtrigextunbiased,  swtrigEXT  ]
 path_bnb_unbiased_swtrig:  [ swtrigbnbunbiased,  swtrigBNB  ]
 path_numi_unbiased_swtrig: [ swtrignumiunbiased, swtrigNUMI ]

 stream_bnb:         [ outbnb ]
 stream_ext_bnb:     [ outextbnb ]

 trigger_paths: [ path_bnb,
                  path_ext_bnb,
                  path_ext_unbiased_swtrig,
                  path_bnb_unbiased_swtrig,
                  path_numi_unbiased_swtrig ]

 end_paths:     [ stream_bnb, stream_ext_bnb ]
}

services.DetectorClocksService.TrigModuleName: "daq"

services.CRTFileManager.ubversion_CRTHits: prod_v06_26_01_13

#physics.filters.opflashfilter.OpFlashModule : "opflash"
#physics.filters.opflashfilter.DisableFilter: false

#physics.filters.opflashfilternumi.OpFlashModule : "opflash"
#physics.filters.opflashfilternumi.DisableFilter: false

physics.producers.merger.debug: false
physics.producers.mergerextra.debug: false

### Here we try to suppress known and pointless messages
services.message.destinations :
{
  STDCOUT: 
  {
     type:      "cout"      #tells the message service to output this destination to cout
     threshold: "WARNING"   #tells the message service that this destination applies to WARNING and higher level messages
     categories:
     {
       ChannelFilter:
       {
         limit: 0
         reportEvery: 0
       }
       TrackStitcher:
       {
         limit: 0
         reportEvery: 0
       }
       CRHitRemoval:
       {
         limit: 0
         reportEvery: 0
       }
       default:
       {
         limit: -1  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 1
       }
     }
  }
}
